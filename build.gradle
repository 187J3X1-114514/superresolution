

plugins {
    id "dev.architectury.loom" version "1.7-SNAPSHOT" apply false
    id "architectury-plugin" version "3.4-SNAPSHOT"
    id "com.github.johnrengelman.shadow" version "8.1.1" apply false
    id "io.github.pacifistmc.forgix" version "1.2.9"
}



architectury {
    minecraft = project.minecraft_version
}


allprojects {
    group = rootProject.maven_group
    version = rootProject.mod_version
}

subprojects {
    apply plugin: "dev.architectury.loom"
    apply plugin: "architectury-plugin"
    apply plugin: "maven-publish"

    base {
        archivesName = "$rootProject.archives_name-$project.name"
    }

    repositories {
        maven {
            url = "http://127.0.0.1:8080/releases"
        }
        maven {
            name 'ParchmentMC'
            url 'https://ldtteam.jfrog.io/artifactory/parchmentmc/'
        }

    }

    dependencies {
        minecraft "net.minecraft:minecraft:$rootProject.minecraft_version"
        mappings loom.layered() {
                  officialMojangMappings()
                  parchment("org.parchmentmc.data:parchment-${rootProject.minecraft_version}:2023.09.03@zip")
        }
        configurations.configureEach {
            //Èí†ÈúÄË¶Ålwjgl3.3.1üòÖ
            resolutionStrategy{
                force "org.lwjgl:lwjgl:$lwjglVersion"
                force "org.lwjgl:lwjgl-glfw:$lwjglVersion"
                force "org.lwjgl:lwjgl-opengl:$lwjglVersion"
                force "org.lwjgl:lwjgl-openal:$lwjglVersion"
                force "org.lwjgl:lwjgl-stb:$lwjglVersion"
                force "org.lwjgl:lwjgl-jemalloc:$lwjglVersion"
                force "org.lwjgl:lwjgl-tinyfd:$lwjglVersion"
            }
        }
    }


    java {
        withSourcesJar()

        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }

    tasks.withType(JavaCompile).configureEach {
        it.options.release = 17
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                artifactId = base.archivesName.get()
                from components.java
            }
        }

        repositories {

        }
    }
}

forgix {
    group = "io.homo.superresolution"
    mergedJarName = "superresolution-${rootProject.mod_version}-${rootProject.minecraft_version}.jar"
    outputDir = "build/"
}